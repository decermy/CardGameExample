StateController - управляет стейт машиной

·       RootStateManager
·       ·       RootState
·       ·       ·       EnemyStateManager
·       ·       ·       ·       ·        начало хода противника [State]
·       ·       ·       ·       ·        обнулить весь накопленный блок - противник [State]
·       ·       ·       ·       ·        выполнить объявленное действие [State]
·       ·       ·       ·       ·        объявить новое действие [State]
·       ·       ·       ·       ·        закончить ход [State]
·       ·       ·       HeroStateManager
·       ·       ·       ·       ·        начало хода игрока [State]
·       ·       ·       ·       ·        обнулить имеющуюся энергию [State]
·       ·       ·       ·       ·        обнулить весь накопленный блок [State]
·       ·       ·       ·       ·        выставить энергию в Х(указано в конфиге) [State]
·       ·       ·       ·       ·        выдать игроку Х карт (указано в конфиге) [State]
·       ·       ·       ·       ·        ~игрок играет карты~ [State]
·       ·       ·       ·       ·        закончить ход, когда энергия = 0 или игрок нажал кнопку «конец хода» [State]

RootStateManager - стейт машина, в каждом RootState еще стейт машина
каждый RootState можно считать отдельным персонажем(герой\противник)

Все [State] определены соответствующими Action - скриптабл объекты, с методом Do(Action DoTransitionCallback), в котором описывается поведение, пока описывается поведение, Стейт машина ожидает DoTransitionCallback, после продолжает работу

Конфиги находятся в GameConfigManager, есть 3 конфига:
·      CardConfig -  скриптабл объект
·        ·        Сколько всего карт
·        ·        Размер «руки» (сколько игрок карт получает каждый ход)
·        ·        Состав колоды (указание префаба/конфига карт)
·        ·        Префаб Карты (обложка)

//где "Состав колоды" - массив префабов карт, с компонентами
Компоненты карты имеют методы:
SetFields() - компонента заполняет свое поле(урон, блок) на карте, и RealizeComponent() - когда карта применяется 

·      EnemyConfig -  скриптабл объект
·      ·        Имя
·      ·        Кол-во ХП
·      ·        Список возможных способностей с процентами

//где способности имеют компоненты способностей, они реализуют методы:
SpellPreset() - когда объявляются и AnnouncedAction() - когда выполняются

·      HeroConfig -  скриптабл объект
·      ·        Кол-во ХП
·      ·        Кол-во энергии
_________________________
Враг, игрок - префабы, имеют свои компоненты (EnemyVisualModel, HeroVisualModel), в компанентах указываются поля в которых будет выводиться информация 
Враг, игрок - префабы вкладываются в BattleManager
Также BattleManager хранит логику о состоянии игрока, противника, картах на руке и в колоде

__________________________
InputController - кнопка рестарт, конец хода, панель победы, панель проигрыша, останавливает StateController в случае победы\проигрыша
Управляет выбором карт из руки

